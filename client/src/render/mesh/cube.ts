export const cubeVertexSize = 4 * 10; // Byte size of one cube vertex.
export const cubePositionOffset = 0;
export const cubeColorOffset = 4 * 4; // Byte offset of cube vertex color attribute.
export const cubeUVOffset = 4 * 8;
export const cubeVertexCount = 36;

// prettier-ignore
export const cubeVertexArray = new Float32Array([
   // position, color, uv
   1.0, -1.0,  1.0,  1.0,    1.0,  0.0,  1.0,  1.0,  0.0,  1.0,
  -1.0, -1.0,  1.0,  1.0,    0.0,  0.0,  1.0,  1.0,  1.0,  1.0,
  -1.0, -1.0, -1.0,  1.0,    0.0,  0.0,  0.0,  1.0,  1.0,  0.0,
   1.0, -1.0, -1.0,  1.0,    1.0,  0.0,  0.0,  1.0,  0.0,  0.0,
   1.0, -1.0,  1.0,  1.0,    1.0,  0.0,  1.0,  1.0,  0.0,  1.0,
  -1.0, -1.0, -1.0,  1.0,    0.0,  0.0,  0.0,  1.0,  1.0,  0.0,

   1.0,  1.0,  1.0,  1.0,    1.0,  1.0,  1.0,  1.0,  0.0,  1.0,
   1.0, -1.0,  1.0,  1.0,    1.0,  0.0,  1.0,  1.0,  1.0,  1.0,
   1.0, -1.0, -1.0,  1.0,    1.0,  0.0,  0.0,  1.0,  1.0,  0.0,
   1.0,  1.0, -1.0,  1.0,    1.0,  1.0,  0.0,  1.0,  0.0,  0.0,
   1.0,  1.0,  1.0,  1.0,    1.0,  1.0,  1.0,  1.0,  0.0,  1.0,
   1.0, -1.0, -1.0,  1.0,    1.0,  0.0,  0.0,  1.0,  1.0,  0.0,

  -1.0,  1.0,  1.0,  1.0,    0.0,  1.0,  1.0,  1.0,  0.0,  1.0,
   1.0,  1.0,  1.0,  1.0,    1.0,  1.0,  1.0,  1.0,  1.0,  1.0,
   1.0,  1.0, -1.0,  1.0,    1.0,  1.0,  0.0,  1.0,  1.0,  0.0,
  -1.0,  1.0, -1.0,  1.0,    0.0,  1.0,  0.0,  1.0,  0.0,  0.0,
  -1.0,  1.0,  1.0,  1.0,    0.0,  1.0,  1.0,  1.0,  0.0,  1.0,
   1.0,  1.0, -1.0,  1.0,    1.0,  1.0,  0.0,  1.0,  1.0,  0.0,

  -1.0, -1.0,  1.0,  1.0,    0.0,  0.0,  1.0,  1.0,  0.0,  1.0,
  -1.0,  1.0,  1.0,  1.0,    0.0,  1.0,  1.0,  1.0,  1.0,  1.0,
  -1.0,  1.0, -1.0,  1.0,    0.0,  1.0,  0.0,  1.0,  1.0,  0.0,
  -1.0, -1.0, -1.0,  1.0,    0.0,  0.0,  0.0,  1.0,  0.0,  0.0,
  -1.0, -1.0,  1.0,  1.0,    0.0,  0.0,  1.0,  1.0,  0.0,  1.0,
  -1.0,  1.0, -1.0,  1.0,    0.0,  1.0,  0.0,  1.0,  1.0,  0.0,

   1.0,  1.0,  1.0,  1.0,    1.0,  1.0,  1.0,  1.0,  0.0,  1.0,
  -1.0,  1.0,  1.0,  1.0,    0.0,  1.0,  1.0,  1.0,  1.0,  1.0,
  -1.0, -1.0,  1.0,  1.0,    0.0,  0.0,  1.0,  1.0,  1.0,  0.0,
  -1.0, -1.0,  1.0,  1.0,    0.0,  0.0,  1.0,  1.0,  1.0,  0.0,
   1.0, -1.0,  1.0,  1.0,    1.0,  0.0,  1.0,  1.0,  0.0,  0.0,
   1.0,  1.0,  1.0,  1.0,    1.0,  1.0,  1.0,  1.0,  0.0,  1.0,

   1.0, -1.0, -1.0,  1.0,    1.0,  0.0,  0.0,  1.0,  0.0,  1.0,
  -1.0, -1.0, -1.0,  1.0,    0.0,  0.0,  0.0,  1.0,  1.0,  1.0,
  -1.0,  1.0, -1.0,  1.0,    0.0,  1.0,  0.0,  1.0,  1.0,  0.0,
   1.0,  1.0, -1.0,  1.0,    1.0,  1.0,  0.0,  1.0,  0.0,  0.0,
   1.0, -1.0, -1.0,  1.0,    1.0,  0.0,  0.0,  1.0,  0.0,  1.0,
  -1.0,  1.0, -1.0,  1.0,    0.0,  1.0,  0.0,  1.0,  1.0,  0.0,
]);
